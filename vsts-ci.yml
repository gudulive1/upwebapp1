# ASP.NET Core
# Build and test ASP.NET Core web applications targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/vsts/pipelines/languages/dotnet-core

resources:
- repo: self
phases:
- phase: Phase_1
  displayName: Build Web App

  condition: succeeded()
  queue:
    name: Hosted VS2017
#Your build pipeline references an undefined variable named ‘Parameters.RestoreBuildProjects’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references an undefined variable named ‘Parameters.RestoreBuildProjects’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971
#Your build pipeline references an undefined variable named ‘Parameters.TestProjects’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971
#Your build pipeline references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971
  steps:
  - task: alanwales.resharper-code-analysis.custom-build-task.ResharperCli@1
    displayName: 'Automated code quality checks'
    inputs:
      SolutionOrProjectPath: WebAppWithDatabase.sln

      FailBuildOnCodeIssues: false

      ResultsOutputFilePath: '$(Build.ArtifactStagingDirectory)\CodeQualityResults.xml'

    enabled: false

  - task: DotNetCoreCLI@2
    displayName: Restore
    inputs:
      command: restore

      projects: '$(Parameters.RestoreBuildProjects)'


  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      projects: '$(Parameters.RestoreBuildProjects)'

      arguments: '--configuration $(BuildConfiguration)'


  - task: DotNetCoreCLI@2
    displayName: Test
    inputs:
      command: test

      projects: '$(Parameters.TestProjects)'

      arguments: '--configuration $(BuildConfiguration)'


  - task: DotNetCoreCLI@2
    displayName: Publish
    inputs:
      command: publish

      publishWebProjects: True

      arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'

      zipAfterPublish: True


  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact (WebApp.zip)'
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)'



- phase: Phase_3
  displayName: Build Database

  condition: succeeded()
  queue:
    name: Hosted VS2017
    demands: msbuild

  steps:
  - task: MSBuild@1
    displayName: 'Build solution WebApp.Database/WebApp.Database.sqlproj'
    inputs:
      solution: WebApp.Database/WebApp.Database.sqlproj


  - task: CopyFiles@2
    displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
    inputs:
      SourceFolder: '$(agent.builddirectory)'

      Contents: '**/*.dacpac'

      TargetFolder: '$(build.artifactstagingdirectory)'

      CleanTargetFolder: true


  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact (Dacpac)'
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)'

      ArtifactName: dacpac



- phase: Phase_2
  displayName: Copy Infrastructure files (ARM)

  condition: succeeded()
  queue:
    name: Hosted VS2017
  steps:
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: ARM templates'
    inputs:
      PathtoPublish: AzureResourceGroupDeployment

      ArtifactName: arm

